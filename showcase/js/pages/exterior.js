// Generated by CoffeeScript 1.7.1
(function() {
  var Exterior;

  Exterior = (function() {
    function Exterior() {
      this.tooltipsData = {
        lights: {
          id: 'lights',
          title: 'Передние и задние светодиодные фонари',
          type: 'bottom',
          color: 'white'
        },
        bumper: {
          id: 'bumpers',
          title: 'Cпортивные бамперы',
          type: 'right',
          color: 'red'
        }
      };
      this.tooltips = [];
      this.layer = null;
      this.renderTooltips();
      this._events();
      window.Animation.addResizeCallback((function(_this) {
        return function() {
          return _this._resize();
        };
      })(this));
    }

    Exterior.prototype.renderTooltips = function() {
      var id, tooltip, tooltipData, _ref;
      this.layer = $('<div />').addClass('tooltipsLayer').css({
        width: $('article#exterior').width(),
        height: $('article#exterior').height()
      }).appendTo('article#exterior');
      _ref = this.tooltipsData;
      for (id in _ref) {
        tooltipData = _ref[id];
        tooltip = new window.Tooltip({
          container: this.layer,
          id: tooltipData.id,
          title: tooltipData.title,
          type: tooltipData.type,
          color: tooltipData.color
        });
        this.tooltips.push(tooltip);
      }
      setTimeout((function(_this) {
        return function() {
          return _this.showTooltips();
        };
      })(this), 1500);
    };

    Exterior.prototype._events = function() {
      return $(window).on('resize', (function(_this) {
        return function(event) {
          return _this.layer.css({
            width: $('article#exterior').width(),
            height: $('article#exterior').height()
          });
        };
      })(this));
    };

    Exterior.prototype._resize = function() {
      var tooltip, _i, _len, _ref, _results;
      _ref = this.tooltips;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        tooltip = _ref[_i];
        _results.push(tooltip.resize());
      }
      return _results;
    };

    Exterior.prototype.showTooltips = function() {
      var tooltip, _i, _len, _ref, _results;
      _ref = this.tooltips;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        tooltip = _ref[_i];
        _results.push(tooltip.show());
      }
      return _results;
    };

    return Exterior;

  })();

  $(function() {
    return window.exterior = new Exterior();
  });

}).call(this);

//# sourceMappingURL=exterior.map
