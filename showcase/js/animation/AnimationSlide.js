// Generated by CoffeeScript 1.7.1
(function() {
  var AnimationSlide,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  AnimationSlide = (function(_super) {
    __extends(AnimationSlide, _super);

    function AnimationSlide() {
      return AnimationSlide.__super__.constructor.apply(this, arguments);
    }

    AnimationSlide.prototype.type = 'slide';

    AnimationSlide.prototype.durations = {
      main: 600,
      small: 300,
      mirco: 100
    };

    AnimationSlide.prototype._forward = function(callback) {
      var position;
      position = window.Animation.article.width() + window.Animation.article.height() / Math.cos(window.Animation.rotateAngleRad);
      return this._stepOne(position, (function(_this) {
        return function() {
          _this._stepTwo(function() {
            return callback(_this.objects.to);
          });
          return _this._stepThree();
        };
      })(this));
    };

    AnimationSlide.prototype._back = function(callback) {
      var position;
      position = -window.Animation.article.width();
      return this._stepOne(position, (function(_this) {
        return function() {
          _this._stepTwo(function() {
            return callback(_this.objects.to);
          });
          return _this._stepThree();
        };
      })(this));
    };

    AnimationSlide.prototype._stepOne = function(startPosition, callback) {
      var planes;
      this.objects.to.css({
        left: startPosition
      });
      planes = window.Animation.planes;
      this.objects.to.show().animate({
        left: 0
      }, {
        duration: this.durations.main,
        easing: 'easeOutCubic',
        queue: false,
        progress: (function(_this) {
          return function(now, fx) {
            var value;
            value = parseInt($(_this.objects.to).css('left'));
            $(_this.objects.to).css('left', value);
            return _this._alignBg();
          };
        })(this),
        complete: (function(_this) {
          return function() {
            _this._alignBg();
            return callback();
          };
        })(this)
      });
      $('.planeBg', planes.right).css({
        display: 'block',
        opacity: 0
      }).animate({
        opacity: 1
      }, {
        duration: this.durations.main,
        queue: false
      });
      return this.objects.from.animate({
        opacity: 0
      }, {
        duration: this.durations.main,
        easing: 'easeOutCubic',
        queue: false
      });
    };

    AnimationSlide.prototype._stepTwo = function(callback) {
      var article, planes, properties;
      planes = window.Animation.planes;
      article = window.Animation.objects.to;
      if (planes.left.length) {
        window.Animation.calculatePlane(window.Animation.originWidth, window.Animation.article.height());
        properties = {};
        if (window.Animation.originWidth === "100%") {
          properties.left = window.Animation.calc.offsetX;
        } else {
          properties.left = window.Animation.article.width() - window.Animation.getSizeInPixels(window.Animation.originWidth);
        }
        $(planes.right).animate(properties, {
          duration: this.durations.small,
          easing: 'easeInCubic',
          queue: false,
          progress: (function(_this) {
            return function(now, fx) {
              return _this._alignBg();
            };
          })(this),
          complete: (function(_this) {
            return function() {
              _this._alignBg();
              _this.halfSlide = new window.animationTypes.halfSlide(_this.objects.from, _this.objects.to, {});
              return callback();
            };
          })(this)
        });
        return planes.left.css({
          display: 'block',
          opacity: 0
        }).animate({
          opacity: 1
        }, {
          duration: this.durations.small,
          easing: 'easeInCubic',
          queue: false
        });
      } else {
        return callback();
      }
    };

    AnimationSlide.prototype._stepThree = function(callback) {
      var article, layer, planes;
      if (callback == null) {
        callback = null;
      }
      planes = window.Animation.planes;
      article = window.Animation.objects.to;
      if ($('.planeBgLayer2', planes.right).length) {
        layer = $('.planeBgLayer2', planes.right);
        return layer.animate({
          marginTop: 0,
          marginRight: 0
        }, {
          duration: 400,
          queue: false,
          easing: 'easeOutQuad',
          complete: (function(_this) {
            return function() {
              if (callback) {
                return callback();
              }
            };
          })(this)
        });
      } else {
        if (callback) {
          return callback();
        }
      }
    };

    AnimationSlide.prototype._alignBg = function() {
      var offset, outRight, planeBg, planes, right;
      planes = window.Animation.planes;
      offset = $('.planeWrapper', planes.right).offset();
      planeBg = $('.planeBg', planes.right);
      offset.right = offset.left + planeBg.outerWidth();
      offset.bottom = offset.top + planeBg.outerHeight();
      outRight = offset.right - window.Animation.article.width();
      right = $('article.popup').length ? 0 : outRight;
      return planeBg.css({
        right: right
      });
    };

    AnimationSlide.prototype._resize = function() {
      var article, left, planes, properties;
      planes = window.Animation.planes;
      article = window.Animation.objects.to;
      window.Animation.prepare(planes);
      if ($('article.popup').length) {
        left = '-40%';
      } else {
        left = 0;
      }
      this.objects.to.css({
        left: left
      });
      if ($(planes.left).length) {
        properties = {};
        if (window.Animation.originWidth === "100%") {
          properties.left = window.Animation.calc.offsetX;
        } else {
          properties.left = window.Animation.article.width() - window.Animation.getSizeInPixels(window.Animation.originWidth);
        }
        if (this.halfSlide) {
          this.halfSlide.offsetBack = properties.left;
          properties = this.halfSlide.getProperties(properties);
        }
        $(planes.right).css(properties);
        if (this.halfSlide) {
          this.halfSlide.resize(planes);
        }
      }
      return this._alignBg();
    };

    return AnimationSlide;

  })(window.AnimationAbstract);

  $(function() {
    return window.animationTypes.slide = AnimationSlide;
  });

}).call(this);

//# sourceMappingURL=AnimationSlide.map
